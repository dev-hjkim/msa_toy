<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fashion.celebrity.auth.mapper.AuthMapper">

    <select id="selectAuthUser" parameterType="String" resultType="com.fashion.celebrity.auth.model.UserInfo">
        SELECT user_id, passwd
        FROM tb_user
        WHERE user_id = #{username}
    </select>

    <select id="selectDupMail" parameterType="com.fashion.celebrity.auth.dto.ValidateDtos$RequestEmail" resultType="com.fashion.celebrity.auth.model.DupUserInfo">
        SELECT user_id
        FROM tb_user
        WHERE user_id = #{email}
    </select>

    <update id="createEmail" parameterType="String">
        INSERT INTO tb_user
        (user_id, status, cnl_cd, temp_dtm)
        VALUES
        (#{email}, '3', '01', now())
    </update>

    <update id="updateCertCode" parameterType="com.fashion.celebrity.auth.dto.ValidateDtos$RequestEmail">
        UPDATE tb_user
        SET cert_num = #{certCode}
        WHERE user_id = #{email}
    </update>

    <select id="selectCertCode" parameterType="String" resultType="String">
        SELECT cert_num
        FROM tb_user
        WHERE user_id = #{email}
    </select>

    <select id="selectNickname" parameterType="String" resultType="com.fashion.celebrity.auth.model.DupUserInfo">
        SELECT user_id
        FROM tb_user
        WHERE nickname = #{nickname}
    </select>

    <update id="createUser" parameterType="com.fashion.celebrity.auth.dto.SignupDtos$Request">
        INSERT INTO tb_user
        (user_id, status, passwd, nickname, mobile, sex, birth_dt, cnl_cd, mkt_yn, pw_mod_dtm, reg_dtm)
        VALUES
        (#{email}, '0', #{password}, #{nickname}, #{phone}, #{gender}, #{birthDate}, #{pathCode}, #{marketingYn}, now(), now())
    </update>

    <select id="selectUser" parameterType="String" resultType="com.fashion.celebrity.auth.model.UserInfo">
        SELECT user_id, status
        FROM tb_user
        WHERE user_id = #{email}
    </select>

    <update id="updateUserLogin" parameterType="String">
        UPDATE tb_user
        SET login_cnt = 0
        , login_cnl = '01'
        , login_dtm = now()
        WHERE user_id = #{email}
    </update>

    <update id="updateTrial" parameterType="com.fashion.celebrity.auth.dto.LoginDtos$Request">
        UPDATE tb_user
        SET login_cnt = login_cnt + 1
        WHERE user_id = #{email}
        <selectKey keyProperty="count" resultType="int" order="AFTER">
            SELECT login_cnt as count
            FROM tb_user
            WHERE user_id = #{email}
        </selectKey>
    </update>

    <update id="updateUserStatus" parameterType="com.fashion.celebrity.auth.dto.LoginDtos$Request">
        UPDATE tb_user
        SET status = #{status}
        WHERE user_id = #{email}
    </update>

    <update id="updateUserLogout" parameterType="String">
        UPDATE tb_user
        SET logout_dtm = now()
        WHERE user_id = #{email}
    </update>

    <select id="findId" parameterType="String" resultType="com.fashion.celebrity.auth.model.FindIdInfo">
        SELECT user_id, cnl_cd
        FROM tb_user
        WHERE mobile = #{phone}
    </select>

    <select id="findPw" parameterType="com.fashion.celebrity.auth.dto.FindDtos$RequestPw" resultType="com.fashion.celebrity.auth.model.FindPwInfo">
        SELECT user_id, cnl_cd
        FROM tb_user
        WHERE user_id = #{email}
        AND mobile = #{phone}
    </select>

    <update id="modPw" parameterType="com.fashion.celebrity.auth.dto.ModifyDtos$RequestPw">
        UPDATE tb_user
        SET passwd = #{password}
        , pw_mod_dtm = now()
        , mod_dtm = now()
        WHERE user_id = #{email}
    </update>

</mapper>